# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Packages

on:
  release:
    types: [published]
  push:
    tags:        
      - v*
    branches: [ master, dev]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-src:
    name: Build Base Packages
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Generate TAG Development
        if: startsWith(github.ref, 'refs/heads/')
        id: Tag
        run: |
          echo "tag=continuous" >> $env:GITHUB_OUTPUT
          echo "name=Continuous Build" >> $env:GITHUB_OUTPUT
      - name: Generate TAG Release
        if: startsWith(github.ref, 'refs/tags/')
        id: Tag
        run: |
          echo "tag=${{ github.ref_name }}" >> $env:GITHUB_OUTPUT
          echo "name=${{ github.ref_name }}" >> $env:GITHUB_OUTPUT

      - uses: actions/checkout@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repository: 'haproxy/haproxy'
          ref: ${{ steps.tag.outputs.tag }}
          path: 'haproxy'
      - uses: actions/checkout@v3
        if: startsWith(github.ref, 'refs/heads/')
        with:
          repository: 'haproxy/haproxy'
          path: 'haproxy'
      - run: |
          ls
      - name: Set up Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          platform: x86_64
          packages: make gcc-core gcc-g++

      # Cygwin executables are added to PATH, so you can call them directly:
      - run: |
          ls.exe -Al
          pwd.exe

      - name: Make haproxy
        run: |
          cd haproxy
          make TARGET=cygwin

      - run: |
          ls
          ls c:
          ls c:\cygwin
          ls c:\cygwin\bin
          mkdir release
          cp haproxy\haproxy.exe release
          cp C:\cygwin\bin\cygwin1.dll release
          cp c:\cygwin\bin\cyggc-1.dll release
          cp c:\cygwin\bin\cyggcc_s-seh-1.dll release
          cp haproxy.cfg release
          ls release
          tar -zcf haproxy-${{ steps.tag.outputs.tag }}.tar.gz release
          ls

      - name: Create release and upload artifacts
        if: startsWith(github.ref, 'refs/heads/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt install -y fuse
          wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ./pyuploadtool-x86_64.AppImage \
          *.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          name: ${{ github.ref_name }}
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            *.tar.gz
